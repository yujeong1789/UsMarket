<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<annotation-driven />


	<!-- Tiles ViewResolver, 기존 Resolver보다 우선되며 찾지 못할 경우 기존 Resolver에 요청 넘김 -->
	<beans:bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	
	<!-- Tiles Resolver가 페이지를 찾기 위해 Tiles 설정파일 위치 지정 -->
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions" value="/WEB-INF/spring/appServlet/tiles.xml" />
	</beans:bean>
	
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/static/" /> <!-- 모든 정적 리소스는 /resources/부터 찾는다 -->


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>


	<context:component-scan base-package="com.spring.usMarket" />
	
	
	<view-controller path="/" view-name="index"/>
	
	
	<!-- LoginInterceptor -->
 	<interceptors>
		<interceptor>
			<mapping path="/product/like/**"/>
			<mapping path="/product/buy/**"/>
			<mapping path="/product/sell/**"/>
			<mapping path="/chat/**"/>
			<mapping path="/member/mypage/**"/>
			<mapping path="/qna/**"/>
			<mapping path="/deal/**"/>
			<beans:bean class="com.spring.usMarket.common.LoginInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/admin/**"/>
			<exclude-mapping path="/admin/login"/>
			<beans:bean class="com.spring.usMarket.common.AdminInterceptor" />
		</interceptor>
	</interceptors>
	
	<!-- websocket handler -->
	<beans:bean id="echoHandler" class="com.spring.usMarket.handler.EchoHandler"/>
	<websocket:handlers>
		<websocket:mapping handler="echoHandler" path="/echo"/>
		<websocket:handshake-interceptors>
			<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		<websocket:sockjs></websocket:sockjs>
	</websocket:handlers>
	
	    
</beans:beans>
